<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:o="http://omnifaces.org/ui" xmlns:p="http://primefaces.org/ui">

	<ui:composition template="/WEB-INF/template/template.xhtml">
		<ui:define name="content">
			<o:importConstants type="com.smartThings.haflete.entity.enums.UploadedMethod" />
			<f:event listener="#{loginBackBean.preRenderSellerPages}" type="preRenderView" />
			<h:outputStylesheet library="css" name="croppie.css"/>
			<div class="container">
	
				<div class="wizardCon">
					<h:form enctype="multipart/form-data">
						<p:growl id="growl" sticky="true" showDetail="true" />
						<p:wizard flowListener="#{newPostBackBean.onFlowProcess}" style="direction:rtl" nextLabel="#{msg['next']}" backLabel="#{msg['back']}"
						id="addPostWizrd">
							<p:tab id="info" title="#{msg['addPost']}">
								<p:panel header="#{msg['info']}">
									<p:messages autoUpdate="true"/>
									<h:panelGrid columns="1" columnClasses="label, value">
										<h:outputText value="#{msg['itemName']}" />
										<p:inputText value="#{newPostBackBean.item.name}" required="true" id="itemName"
											label="#{msg['itemName']}" requiredMessage="#{msg['required']}">
											<p:ajax event="blur" process="@this" update="@this"/>
											
											<f:validateLength minimum="2" maximum="255"/>
										</p:inputText>
										
										<h:outputText value="#{msg['price']}" />
										<p:inputText value="#{newPostBackBean.item.price}" required="true" id="priceInput" converterMessage="#{msg['numberRequired']}"
											requiredMessage="#{msg['required']}" label="#{msg['price']}" validatorMessage="#{msg['numberRequired']}">
											
											<p:ajax event="blur" process="@this" update="@this"/>
											<f:validateDoubleRange minimum="1" for="priceInput" />
											<f:validateLength minimum="1" maximum="19"/>
										</p:inputText>
										
										<h:outputText value="#{msg['desc']}" id="itemDesc"/>
										<p:inputTextarea value="#{newPostBackBean.item.description}">
											<p:ajax event="blur" process="@this" update="@this"/>
										</p:inputTextarea>
									</h:panelGrid>
								</p:panel>
							</p:tab>
							<p:tab id="images" title="#{msg['images']}">
								<p:dataGrid  var="image" value="#{newPostBackBean.item.imagesList}" columns="3" layout="grid" id="imagesGrid"
									emptyMessage="#{msg['emptyResult']}">
									<f:facet name="header">
							            #{msg['uploadedImgsClickToDelete']}
							        </f:facet>
									
									<p:panel header="#{image.name}" style="text-align:center">
							            <h:panelGrid columns="1" style="width:100%">
							                <p:commandLink title="#{msg['deleteImage']}" actionListener="#{newPostBackBean.deleteImage(image)}" update="imagesGrid">
							                	<p:graphicImage url="#{image.url}" width="300px"/>
										        <p:confirm header="#{msg['confirmHeader']}" message="#{msg['confirm']}" icon="ui-icon-alert" />
										    </p:commandLink>
										 
										    <p:confirmDialog global="true" showEffect="fade" hideEffect="fade">
										        <p:commandButton value="#{msg['Yes']}" type="button" styleClass="ui-confirmdialog-yes" icon="ui-icon-check" />
										        <p:commandButton value="#{msg['No']}" type="button" styleClass="ui-confirmdialog-no" icon="ui-icon-close" />
										    </p:confirmDialog>
							            </h:panelGrid>
							        </p:panel>
								</p:dataGrid> 
								
								<p:spacer />
								<p:spacer />
								
								<p:fileUpload fileUploadListener="#{newPostBackBean.handleFileUpload}" mode="advanced" dragDropSupport="true" uploadLabel="#{msg['uploadBtn']}"
									  label="#{msg['uploadBtn']}" update="@parent:@parent" sizeLimit="5000000" allowTypes="/(\.|\/)(gif|jpe?g|png)$/" auto="true" multiple="true"
			                          fileLimitMessage="#{msg['fileSizeLimit']}" required="true" invalidFileMessage="#{msg['invalidFile']}" invalidSizeMessage="#{msg['fileSizeLimit']}"/>
			 					
			    				<p:growl id="messages" showDetail="true" />
							</p:tab>
							<p:tab id="chooseImage" title="#{msg['chooseImage']}">
								<p:dataGrid  var="image" value="#{newPostBackBean.item.imagesList}" columns="3" layout="grid" 
									rendered="#{empty newPostBackBean.choosenImage}">
										<f:facet name="header">
								            #{msg['chooseFrontImg']}
								        </f:facet>
								        
								        <p:panel header="#{image.name}" style="text-align:center">
								            <h:panelGrid columns="1" style="width:100%">
								                <p:commandLink update="@form" title="#{msg['chooseImage']}">
								                	<p:graphicImage url="#{image.url}" width="300px"/>
								                    <f:setPropertyActionListener value="#{image}" target="#{newPostBackBean.choosenImage}" />
								                </p:commandLink>
								            </h:panelGrid>
								        </p:panel>
								</p:dataGrid>
								
								<h:panelGroup rendered="#{not empty newPostBackBean.choosenImage}"> 
									<div class="crop-container">
										<h:inputText styleClass="hidden base64" value="#{newPostBackBean.croppedBase64}" id="base64"/>
								    	<h:inputText styleClass="hidden imgSrc" value="#{newPostBackBean.choosenImage.thumbUrl}"/>
								    	
								    	<div id="demo-basic"></div>
								    	
								    	<p:commandButton value="#{msg['crop']}" icon="ui-icon-scissors" onclick="crop(); PF('statusDialog').show(); return false;"/>
								    	<p:commandButton process="base64" styleClass="cropperBtn hidden" oncomplete="$('.cropActionBtn').click();"/>
								    	<p:commandButton styleClass="cropActionBtn hidden" action="#{newPostBackBean.crop}" />
								    	<script>
											initCropper();
										</script>
									</div>
								</h:panelGroup>
								
							</p:tab>
							<p:tab id="videos" title="#{msg['videos']}">
								<p:dataGrid var="video" value="#{newPostBackBean.item.videosList}" id="videosGrid" columns="3" layout="grid">
										<f:facet name="header">
								            #{msg['uploadedVideos']}
								        </f:facet>
								        
								        <p:panel header="#{video.name}" style="text-align:center">
								            <h:panelGrid columns="1" style="width:100%">
								            	<h:panelGroup rendered="#{video.uploadedMethod eq UploadedMethod.URL}">
								                	<div><iframe src="#{video.url}" height="300" width="300" /></div>
								                </h:panelGroup>
								                <h:panelGroup rendered="#{video.uploadedMethod ne UploadedMethod.URL}">
									                <video id="my-video" class="video-js" controls="true" preload="auto" width="640" height="264"
												  		poster="#{video.thumbUrl}" data-setup="{}">
													    <source src="#{video.url}" type='#{video.ext}'/>
													    <p class="vjs-no-js">
													      To view this video please enable JavaScript, and consider upgrading to a web browser that
													      <a href="http://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a>
													    </p>
												  	</video>
											  	</h:panelGroup>
								            </h:panelGrid>
								        </p:panel>
								</p:dataGrid>
								
								<p:fileUpload fileUploadListener="#{newPostBackBean.handleVideoUpload}" mode="advanced" dragDropSupport="true" uploadLabel="#{msg['uploadBtn']}"
									  label="#{msg['uploadBtn']}" update="@parent:@parent" auto="true" multiple="true"
									  sizeLimit="50000000" allowTypes="/(\.|\/)(webm|mkv|flv|vob|ogv|ogg|drc|avi|mov|qt|wmv|rm|rmvb|amv|mp4|m4p|m4v|mpg|mp2|mpeg|mpe|mpv|mpg|mpeg|svi|m4v|3gp|3g2|nsv)$/"
			                          fileLimitMessage="#{msg['fileSizeLimit']}" required="true" invalidFileMessage="#{msg['invalidVideoFile']}" invalidSizeMessage="#{msg['fileSizeLimit']}"/>
			                    
			                    <p:inputText value="#{newPostBackBean.uploadVideoUrl}" placeholder="#{msg['uploadVideoUrl']}" id="uploadUrl" />
			                    
			                    <p:commandButton action="#{newPostBackBean.uploadVideoViaUrl}" value="#{msg['upload']}" process="@parent" update="videosGrid"/>
			                   	
							</p:tab>
						</p:wizard>
						<center>
							<p:commandButton action="#{newPostBackBean.finish}" value="#{msg['finish']}"/>
						</center>
					</h:form>
				</div>
			</div>
		</ui:define>
	</ui:composition>
</html>